CDN project 

RTMP/RTMPE - Real Time Messaging Protocol - for Flash players such as JW Player or Flowplayer.
HLS - Apple HTTP Live Streaming - for Android, Apple, QuickTime and HTML5 players such as JW Player or Flowplayer.
RTSP - Real Time Streaming Protocol - for Android, Blackberry and smartphones.
MSS - Microsoft Smooth Streaming - for Windows Phone and Silverlight players.
HDS - Adobe HTTP Dynamic Streaming - for HTML5 players such as Flowplayer.

https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/digital-media-video

easy components 
- react web app 
- azure blob 
- azure media encoding 



hard components
- react website for streaming, frontend
- azure BGP, ( EAST US, WEST US, UK South  )
- DNS
- k8
- azure blob storage
- apache container origin server 
- apache proxy cache container 














# =====================================
NOTES 

Content Distribution Networks (CDNs). Netflix employs
multiple CDNs to deliver the video content to end users. The
encoded and DRM protected videos are sourced in Amazon
cloud and copied to CDNs. Netflix employs three CDNs:
Akamai, LimeLight, and Level-3. For the same video with the
same quality level, the same encoded content is delivered from
all three CDNs. In Section II-D we study the Netflix strategy
used to select these CDNs to serve videos.

Netflix uses the DASH (Dynamic Streaming over HTTP)
protocol for streaming. In DASH, each video is encoded
at several different quality levels, and is divided into small
‘chunks’ - video segments of no more than a few seconds in
length. The client requests one video chunk at a time via HTTP.
With each download, it measures the received bandwidth and
runs a rate determination algorithm to determine the quality
of the next chunk to request. DASH allows the player to freely
switch between different quality levels at the chunk boundaries.


<nccp:cdns>
<nccp:cdn>
<nccp:name>level3</nccp:name>
<nccp:cdnid>6</nccp:cdnid>
<nccp:rank>1</nccp:rank>
<nccp:weight>140</nccp:weight>
</nccp:cdn>
<nccp:cdn>
<nccp:name>limelight</nccp:name>
<nccp:cdnid>4</nccp:cdnid>
<nccp:rank>2</nccp:rank>
<nccp:weight>120</nccp:weight>
</nccp:cdn>
<nccp:cdn>
<nccp:name>akamai</nccp:name>
<nccp:cdnid>9</nccp:cdnid>
<nccp:rank>3</nccp:rank>
<nccp:weight>100</nccp:weight>
</nccp:cdn>
</nccp:cdns>
Fig. 3. CDN list in manifest file


Streaming Protocol. Hulu uses encrypted RTMP (Real
Time Messaging Protocol) to deliver movies to desktop
browsers. Hulu videos can be delivered over raw RTMP on
port 1935 or RTMP tunneled over HTTP (RTMPT). Our experiments
reveal that Level3 prefers raw RTMP whereas Akamai
and Limelight prefers RTMPT. All three CDNs use RTMPT
when TCP port 1935 is blocked (by a firewall for instance).
HuluPlus on a desktop browser uses the same technologies
and protocols. However, on mobile devices HuluPlus uses
adaptive streaming over HTTP. For instance, on iPhone and
iPad, HuluPlus content is delivered over HTTP LiveStreaming
technology[12]. Hulu advertisements are single .FLV files.
These files are small (a few megabytes) and are downloaded
over single HTTP transactions.





I would recommended to use Azure Media Service based on your scenario, For quick starts for encoding and streaming and see if you get better performance for your scenario. https://docs.microsoft.com/en-us/azure/media-services/latest/

    Blob Storage: Stores large amounts of unstructured data, such as text or binary data, that can be accessed from anywhere in the world via HTTP or HTTPS. You can use Blob storage to expose data publicly to the world, or to store application data privately.

    Azure Media Services Encoder: Encoding jobs are one of the most common processing operations in Media Services. You create encoding jobs to convert media files from one encoding to another.

    Azure Media Services Streaming Endpoint: A streaming service that can deliver content directly to a client player application, or to a content delivery network (CDN) for further distribution.

    Media Services supports integration with Azure CDN (for more information, see How to Manage Streaming Endpoints in a Media Services Account). You can use Live streaming with CDN. Azure Media Services provides Smooth Streaming, HLS and MPEG-DASH outputs. All these formats use HTTP for transferring data and get benefits of HTTP caching. In live streaming actual video/audio data is divided to fragments and this individual fragments get cached in CDN. Only data needs to be refreshed is the manifest data. CDN periodically refreshes manifest data.

    If you have plans to stream to possible multiple users consider to use Azure Media Services and also CDN to save cost with network out:

    The output from Media Services is a blob into a container.

For more information refer to this article: https://docs.microsoft.com/en-us/azure/architecture/solution-ideas/articles/digital-media-video

Azure Blob Storage: If you are just looking to store JPEG or PNG images, you should keep those in Azure Blob Storage. There is no benefit to putting them in your Media Services account unless you want to keep them associated with your Video or Audio Assets. Or if you might have a need to use the images as overlays in the video encoder. Media Encoder Standard supports overlaying images on top of videos, and that is what it lists JPEG and PNG as supported input formats.



